
optimization1:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 c5 2f 00 00 	mov    0x2fc5(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <clock@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <clock@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <clock@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	ff 25 8a 2f 00 00    	jmp    *0x2f8a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	31 ed                	xor    %ebp,%ebp
    1062:	49 89 d1             	mov    %rdx,%r9
    1065:	5e                   	pop    %rsi
    1066:	48 89 e2             	mov    %rsp,%rdx
    1069:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    106d:	50                   	push   %rax
    106e:	54                   	push   %rsp
    106f:	45 31 c0             	xor    %r8d,%r8d
    1072:	31 c9                	xor    %ecx,%ecx
    1074:	48 8d 3d 17 01 00 00 	lea    0x117(%rip),%rdi        # 1192 <main>
    107b:	ff 15 3f 2f 00 00    	call   *0x2f3f(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1081:	f4                   	hlt
    1082:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1089:	00 00 00 
    108c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 89 2f 00 00 	lea    0x2f89(%rip),%rdi        # 4020 <__TMC_END__>
    1097:	48 8d 05 82 2f 00 00 	lea    0x2f82(%rip),%rax        # 4020 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 1e 2f 00 00 	mov    0x2f1e(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	ret
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4020 <__TMC_END__>
    10c7:	48 8d 35 52 2f 00 00 	lea    0x2f52(%rip),%rsi        # 4020 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    $1,%rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 ed 2e 00 00 	mov    0x2eed(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	ret
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64
    1104:	80 3d 15 2f 00 00 00 	cmpb   $0x0,0x2f15(%rip)        # 4020 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d ca 2e 00 00 	cmpq   $0x0,0x2eca(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d f6 2e 00 00 	mov    0x2ef6(%rip),%rdi        # 4018 <__dso_handle>
    1122:	e8 29 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	call   1090 <deregister_tm_clones>
    112c:	c6 05 ed 2e 00 00 01 	movb   $0x1,0x2eed(%rip)        # 4020 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	ret
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	e9 77 ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001149 <fibonacci>:
    1149:	55                   	push   %rbp
    114a:	53                   	push   %rbx
    114b:	48 83 ec 08          	sub    $0x8,%rsp
    114f:	89 fb                	mov    %edi,%ebx
    1151:	b8 00 00 00 00       	mov    $0x0,%eax
    1156:	e8 9d 00 00 00       	call   11f8 <helper_func>
    115b:	89 c6                	mov    %eax,%esi
    115d:	89 da                	mov    %ebx,%edx
    115f:	48 8d 3d a2 0e 00 00 	lea    0xea2(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    1166:	b8 00 00 00 00       	mov    $0x0,%eax
    116b:	e8 d0 fe ff ff       	call   1040 <printf@plt>
    1170:	89 d8                	mov    %ebx,%eax
    1172:	83 fb 01             	cmp    $0x1,%ebx
    1175:	7e 14                	jle    118b <fibonacci+0x42>
    1177:	8d 7b ff             	lea    -0x1(%rbx),%edi
    117a:	e8 ca ff ff ff       	call   1149 <fibonacci>
    117f:	89 c5                	mov    %eax,%ebp
    1181:	8d 7b fe             	lea    -0x2(%rbx),%edi
    1184:	e8 c0 ff ff ff       	call   1149 <fibonacci>
    1189:	01 e8                	add    %ebp,%eax
    118b:	48 83 c4 08          	add    $0x8,%rsp
    118f:	5b                   	pop    %rbx
    1190:	5d                   	pop    %rbp
    1191:	c3                   	ret

0000000000001192 <main>:
    1192:	53                   	push   %rbx
    1193:	e8 98 fe ff ff       	call   1030 <clock@plt>
    1198:	48 89 c3             	mov    %rax,%rbx
    119b:	bf 19 00 00 00       	mov    $0x19,%edi
    11a0:	e8 a4 ff ff ff       	call   1149 <fibonacci>
    11a5:	89 c2                	mov    %eax,%edx
    11a7:	be 19 00 00 00       	mov    $0x19,%esi
    11ac:	48 8d 3d b2 0e 00 00 	lea    0xeb2(%rip),%rdi        # 2065 <_IO_stdin_used+0x65>
    11b3:	b8 00 00 00 00       	mov    $0x0,%eax
    11b8:	e8 83 fe ff ff       	call   1040 <printf@plt>
    11bd:	e8 6e fe ff ff       	call   1030 <clock@plt>
    11c2:	48 29 d8             	sub    %rbx,%rax
    11c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    11c9:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    11ce:	66 0f 28 c8          	movapd %xmm0,%xmm1
    11d2:	f2 0f 5e 0d 9e 0e 00 	divsd  0xe9e(%rip),%xmm1        # 2078 <_IO_stdin_used+0x78>
    11d9:	00 
    11da:	48 8d 3d 4f 0e 00 00 	lea    0xe4f(%rip),%rdi        # 2030 <_IO_stdin_used+0x30>
    11e1:	b8 02 00 00 00       	mov    $0x2,%eax
    11e6:	e8 55 fe ff ff       	call   1040 <printf@plt>
    11eb:	b8 00 00 00 00       	mov    $0x0,%eax
    11f0:	5b                   	pop    %rbx
    11f1:	c3                   	ret
    11f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000011f8 <helper_func>:
    11f8:	b8 34 53 00 00       	mov    $0x5334,%eax
    11fd:	0f 1f 00             	nopl   (%rax)
    1200:	83 e8 01             	sub    $0x1,%eax
    1203:	75 fb                	jne    1200 <helper_func+0x8>
    1205:	b8 d5 00 00 00       	mov    $0xd5,%eax
    120a:	c3                   	ret

Disassembly of section .fini:

000000000000120c <_fini>:
    120c:	48 83 ec 08          	sub    $0x8,%rsp
    1210:	48 83 c4 08          	add    $0x8,%rsp
    1214:	c3                   	ret
