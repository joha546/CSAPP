
optimization0:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 c5 2f 00 00 	mov    0x2fc5(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <clock@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <clock@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <clock@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	ff 25 8a 2f 00 00    	jmp    *0x2f8a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	31 ed                	xor    %ebp,%ebp
    1062:	49 89 d1             	mov    %rdx,%r9
    1065:	5e                   	pop    %rsi
    1066:	48 89 e2             	mov    %rsp,%rdx
    1069:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    106d:	50                   	push   %rax
    106e:	54                   	push   %rsp
    106f:	45 31 c0             	xor    %r8d,%r8d
    1072:	31 c9                	xor    %ecx,%ecx
    1074:	48 8d 3d 43 01 00 00 	lea    0x143(%rip),%rdi        # 11be <main>
    107b:	ff 15 3f 2f 00 00    	call   *0x2f3f(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1081:	f4                   	hlt
    1082:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1089:	00 00 00 
    108c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 89 2f 00 00 	lea    0x2f89(%rip),%rdi        # 4020 <__TMC_END__>
    1097:	48 8d 05 82 2f 00 00 	lea    0x2f82(%rip),%rax        # 4020 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 1e 2f 00 00 	mov    0x2f1e(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	ret
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4020 <__TMC_END__>
    10c7:	48 8d 35 52 2f 00 00 	lea    0x2f52(%rip),%rsi        # 4020 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    $1,%rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 ed 2e 00 00 	mov    0x2eed(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	ret
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64
    1104:	80 3d 15 2f 00 00 00 	cmpb   $0x0,0x2f15(%rip)        # 4020 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d ca 2e 00 00 	cmpq   $0x0,0x2eca(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d f6 2e 00 00 	mov    0x2ef6(%rip),%rdi        # 4018 <__dso_handle>
    1122:	e8 29 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	call   1090 <deregister_tm_clones>
    112c:	c6 05 ed 2e 00 00 01 	movb   $0x1,0x2eed(%rip)        # 4020 <__TMC_END__>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	ret
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	e9 77 ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001149 <fibonacci>:
    1149:	55                   	push   %rbp
    114a:	48 89 e5             	mov    %rsp,%rbp
    114d:	53                   	push   %rbx
    114e:	48 83 ec 28          	sub    $0x28,%rsp
    1152:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1155:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1158:	89 45 ec             	mov    %eax,-0x14(%rbp)
    115b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    115e:	89 45 dc             	mov    %eax,-0x24(%rbp)
    1161:	c7 45 ec 28 00 00 00 	movl   $0x28,-0x14(%rbp)
    1168:	b8 00 00 00 00       	mov    $0x0,%eax
    116d:	e8 f4 00 00 00       	call   1266 <helper_func>
    1172:	89 c1                	mov    %eax,%ecx
    1174:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1177:	89 c2                	mov    %eax,%edx
    1179:	89 ce                	mov    %ecx,%esi
    117b:	48 8d 05 86 0e 00 00 	lea    0xe86(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    1182:	48 89 c7             	mov    %rax,%rdi
    1185:	b8 00 00 00 00       	mov    $0x0,%eax
    118a:	e8 b1 fe ff ff       	call   1040 <printf@plt>
    118f:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
    1193:	7f 05                	jg     119a <fibonacci+0x51>
    1195:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1198:	eb 1e                	jmp    11b8 <fibonacci+0x6f>
    119a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    119d:	83 e8 01             	sub    $0x1,%eax
    11a0:	89 c7                	mov    %eax,%edi
    11a2:	e8 a2 ff ff ff       	call   1149 <fibonacci>
    11a7:	89 c3                	mov    %eax,%ebx
    11a9:	8b 45 dc             	mov    -0x24(%rbp),%eax
    11ac:	83 e8 02             	sub    $0x2,%eax
    11af:	89 c7                	mov    %eax,%edi
    11b1:	e8 93 ff ff ff       	call   1149 <fibonacci>
    11b6:	01 d8                	add    %ebx,%eax
    11b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    11bc:	c9                   	leave
    11bd:	c3                   	ret

00000000000011be <main>:
    11be:	55                   	push   %rbp
    11bf:	48 89 e5             	mov    %rsp,%rbp
    11c2:	48 83 ec 20          	sub    $0x20,%rsp
    11c6:	e8 65 fe ff ff       	call   1030 <clock@plt>
    11cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11cf:	c7 45 f4 19 00 00 00 	movl   $0x19,-0xc(%rbp)
    11d6:	8b 45 f4             	mov    -0xc(%rbp),%eax
    11d9:	89 c7                	mov    %eax,%edi
    11db:	e8 69 ff ff ff       	call   1149 <fibonacci>
    11e0:	89 45 f0             	mov    %eax,-0x10(%rbp)
    11e3:	8b 55 f0             	mov    -0x10(%rbp),%edx
    11e6:	8b 45 f4             	mov    -0xc(%rbp),%eax
    11e9:	89 c6                	mov    %eax,%esi
    11eb:	48 8d 05 39 0e 00 00 	lea    0xe39(%rip),%rax        # 202b <_IO_stdin_used+0x2b>
    11f2:	48 89 c7             	mov    %rax,%rdi
    11f5:	b8 00 00 00 00       	mov    $0x0,%eax
    11fa:	e8 41 fe ff ff       	call   1040 <printf@plt>
    11ff:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%rbp)
    1206:	e8 25 fe ff ff       	call   1030 <clock@plt>
    120b:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    120f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1213:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1217:	f2 48 0f 2a 45 f8    	cvtsi2sdq -0x8(%rbp),%xmm0
    121d:	f2 0f 10 0d 53 0e 00 	movsd  0xe53(%rip),%xmm1        # 2078 <_IO_stdin_used+0x78>
    1224:	00 
    1225:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    1229:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    122e:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1232:	f2 48 0f 2a 55 f8    	cvtsi2sdq -0x8(%rbp),%xmm2
    1238:	66 48 0f 7e d0       	movq   %xmm2,%rax
    123d:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    1242:	66 0f 28 c8          	movapd %xmm0,%xmm1
    1246:	66 48 0f 6e c0       	movq   %rax,%xmm0
    124b:	48 8d 05 ee 0d 00 00 	lea    0xdee(%rip),%rax        # 2040 <_IO_stdin_used+0x40>
    1252:	48 89 c7             	mov    %rax,%rdi
    1255:	b8 02 00 00 00       	mov    $0x2,%eax
    125a:	e8 e1 fd ff ff       	call   1040 <printf@plt>
    125f:	b8 00 00 00 00       	mov    $0x0,%eax
    1264:	c9                   	leave
    1265:	c3                   	ret

0000000000001266 <helper_func>:
    1266:	55                   	push   %rbp
    1267:	48 89 e5             	mov    %rsp,%rbp
    126a:	c7 45 f8 2d 00 00 00 	movl   $0x2d,-0x8(%rbp)
    1271:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1274:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1277:	c7 45 f8 d5 00 00 00 	movl   $0xd5,-0x8(%rbp)
    127e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1285:	eb 5a                	jmp    12e1 <helper_func+0x7b>
    1287:	c7 45 f0 18 00 00 00 	movl   $0x18,-0x10(%rbp)
    128e:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1291:	01 c0                	add    %eax,%eax
    1293:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1296:	8b 55 f8             	mov    -0x8(%rbp),%edx
    1299:	89 d0                	mov    %edx,%eax
    129b:	c1 e0 02             	shl    $0x2,%eax
    129e:	01 d0                	add    %edx,%eax
    12a0:	f7 d8                	neg    %eax
    12a2:	8b 55 ec             	mov    -0x14(%rbp),%edx
    12a5:	01 d0                	add    %edx,%eax
    12a7:	89 45 e8             	mov    %eax,-0x18(%rbp)
    12aa:	8b 45 ec             	mov    -0x14(%rbp),%eax
    12ad:	6b c0 2d             	imul   $0x2d,%eax,%eax
    12b0:	48 63 d0             	movslq %eax,%rdx
    12b3:	48 69 d2 cf f6 e2 7b 	imul   $0x7be2f6cf,%rdx,%rdx
    12ba:	48 c1 ea 20          	shr    $0x20,%rdx
    12be:	c1 fa 08             	sar    $0x8,%edx
    12c1:	c1 f8 1f             	sar    $0x1f,%eax
    12c4:	29 c2                	sub    %eax,%edx
    12c6:	69 c2 fa 9c 03 06    	imul   $0x6039cfa,%edx,%eax
    12cc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    12cf:	8b 55 ec             	mov    -0x14(%rbp),%edx
    12d2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    12d5:	01 d0                	add    %edx,%eax
    12d7:	2b 45 e4             	sub    -0x1c(%rbp),%eax
    12da:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12dd:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    12e1:	8b 45 f8             	mov    -0x8(%rbp),%eax
    12e4:	6b c0 64             	imul   $0x64,%eax,%eax
    12e7:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    12ea:	7c 9b                	jl     1287 <helper_func+0x21>
    12ec:	8b 45 f8             	mov    -0x8(%rbp),%eax
    12ef:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12f2:	8b 45 f4             	mov    -0xc(%rbp),%eax
    12f5:	5d                   	pop    %rbp
    12f6:	c3                   	ret

Disassembly of section .fini:

00000000000012f8 <_fini>:
    12f8:	48 83 ec 08          	sub    $0x8,%rsp
    12fc:	48 83 c4 08          	add    $0x8,%rsp
    1300:	c3                   	ret
